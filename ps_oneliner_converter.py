# This is a quick and dirty script for converting obfuscated PowerShell oneliner scripts into multiline scripts
# for the purpose of reading them more easily. It does not take into account the posibility that squiqqly brackets
# etc could be contained in quotes, as this is almost never going to be the case in obfuscated PowerShell scripts.

from argparse import ArgumentParser
import os

parser = ArgumentParser('PowerShell Oneliner Converter', 'Convert a PowerShell oneliner to a multiline script.')
parser.add_argument('-f', '--filepath', type=os.path.abspath, required=True, help='File with PowerShell Oneliner')
args = parser.parse_args()


filepath = args.filepath
filetowrite = filepath.split('.')[0] + '_converted.' + filepath.split('.')[-1]

# we need to keep count of the number of open squiggly brackets, as each one
# means we need to indent the following code once
squiggly_count = 0

with open(filepath, 'r') as fileread:
	with open(filetowrite, 'w') as filewrite:
		for line in fileread:
			for i, c in enumerate(line):
				# for each opening squiqqly bracket, print it, then increment the bracket count
				# and print a new line and the correct number of tabs
				if c == '{':
					filewrite.write(c)
					squiggly_count += 1
					filewrite.write('\n' + squiggly_count * '\t')
					continue
				# for each closing squiqqly bracket, decrement the bracket count,
				# print a new line and the correct number of tabs, then the bracket
				elif c == '}':
					squiggly_count -= 1
					filewrite.write('\n' + squiggly_count * '\t')
					filewrite.write(c)
					continue
				# for each semicolon, print it followed by a new line and the correct number of tabs
				elif c == ';':
					filewrite.write(c)
					filewrite.write('\n' + squiggly_count * '\t')
					continue
				# for each space, if it follows a semicolon, do not print it. This is because it will
				# mess up the indentation
				elif c == ' ':
					if line[i - 1] == ';':
						continue
				filewrite.write(c)
				continue
		filewrite.close()
		fileread.close()